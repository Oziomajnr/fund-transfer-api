package api.model

import model.FundTransferRequest
import org.hibernate.validator.constraints.NotEmpty

import javax.validation.constraints.Max
import javax.validation.constraints.Min

class FundTransferApiRequest {
    /**
     * A unique id to identify this transaction, this Id should be generated by the client
     */
    @NotEmpty(message = "Request Id must be a non empty string")
    lateinit var requestId: String

    /**
     * Identifier for the source account
     */
    @NotEmpty(message = "Source account must be a non empty string")
    lateinit var fromAccount: String
    /**
     * Identifier for the destination account
     */
    @NotEmpty(message = "Destination account must be a non empty string")
    lateinit var toAccount: String

    @Min(value = 100, message = "You cannot transfer below 1 dollar ")
    @Max(value = 10000000, message = "You cannot transfer above 1000 dollars")
    var amountInCents: Int = 0

    fun toFundTransferRequest(): FundTransferRequest {
        val fundTransferRequest = FundTransferRequest()
        fundTransferRequest.transactionId = this.requestId
        fundTransferRequest.sourceAccount = this.fromAccount
        fundTransferRequest.destinationAccount = this.toAccount
        fundTransferRequest.amountInCents = this.amountInCents
        return fundTransferRequest
    }
}
