package api.model

import com.fasterxml.jackson.annotation.JsonInclude
import model.FundTransferRequest

@JsonInclude(JsonInclude.Include.NON_NULL)
data class FundTransferResponse(val fundTransferStatus: FundTransferStatus,
                                /**
                                 * a unique id to identify this transaction, this Id should be generated by the client
                                 */
                                val transactionRequestId: String,
                                val amountInCents: Int,
                                val reasonForFailure: ReasonForFailure? = null) {
    companion object {
        fun getInvalidDestinationAccountRespose(fundTransferRequest: FundTransferRequest): FundTransferResponse {
            return FundTransferResponse(FundTransferStatus.ERROR,
                    fundTransferRequest.transactionId,
                    0,
                    ReasonForFailure.INVALID_DESTINATION_ACCOUNT)
        }

        fun getInvalidSourceAccountRespose(fundTransferRequest: FundTransferRequest): FundTransferResponse {
            return FundTransferResponse(FundTransferStatus.ERROR,
                    fundTransferRequest.transactionId,
                    0,
                    ReasonForFailure.INVALID_SENDER_ACCOUNT)
        }

        fun getInsufficientBalance(fundTransferRequest: FundTransferRequest): FundTransferResponse {
            return FundTransferResponse(FundTransferStatus.ERROR,
                    fundTransferRequest.transactionId,
                    0,
                    ReasonForFailure.INSUFFICIENT_BALANCE)
        }

        fun getUnknownErrorResponse(fundTransferRequest: FundTransferRequest): FundTransferResponse {
            return FundTransferResponse(FundTransferStatus.ERROR,
                    fundTransferRequest.transactionId,
                    0,
                    ReasonForFailure.UNKNOWN)
        }

        fun getSuccessFulResponse(fundTransferRequest: FundTransferRequest): FundTransferResponse {
            return FundTransferResponse(FundTransferStatus.SUCCESS,
                    fundTransferRequest.transactionId,
                    fundTransferRequest.amountInCents)
        }
    }
}

